@model Auction.Models.CustProduct
@{
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="A-Product-Main">
        <h1>Add Product For Auction</h1>
        <p>A fee of ₹25 per day applies for each product listed for auction. Thank you for your cooperation!</p>
        @using (Html.BeginForm("Create", "CustProducts", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
    <div class="A-Product-Card">
        <div class="A-Card1">
            <div class="A-Sub-Card">
                <h3>General Information</h3>
                <div>
                    @Html.Label("Product Name", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" ,required="required"} })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })<br />
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control text-area1", required = "required" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="A-Sub-Card">
                <h3>Date & Time</h3>
                @Html.Label("Start Time", htmlAttributes: new { @class = "control-label" })
                <input type="datetime-local" name="startdate" class="form-control" required/><br />
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

                @Html.Label("End Time", htmlAttributes: new { @class = "control-label" })
                <input type="datetime-local" name="enddate" class="form-control"required />
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>

            <div class="A-Sub-Card">
                <h3>Category</h3>
                <div class="form-group">
                    @Html.Label("Category", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("selectedCategoryId", (SelectList)ViewBag.CategoryList, "Select a Category", new { @class = "form-control", @id = "selectedCategoryId", required = "required" })
                    @Html.ValidationMessage("selectedCategoryId", "", new { @class = "text-danger" })

                    @Html.Label("Sub Category", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("selectedProNameId", (SelectList)ViewBag.SubCategoryList, "Select Subcategory", new { @class = "form-control", @id = "selectedProNameId" , required = "required" })
                    @Html.ValidationMessage("selectedProNameId", "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="A-Card2">
            <div class="A-Sub-Card">
                <h3>Pricing</h3>
                @Html.Label("Product Price", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control",min=1, required = "required" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
            <div class="A-Sub-Card">
                <h3>Upload Images</h3>
                <div class="file-upload">
                    <label for="image1">Image1</label>
                    <input type="file" id="image1" name="image1" class="file-input" ,required="required"/>
                </div>
                <div class="file-upload">
                    <label for="image2">Image2</label>
                    <input type="file" id="image2" name="image2" class="file-input" ,required="required"/>
                </div>
                <div class="file-upload">
                    <label for="image3">Image3</label>
                    <input type="file" id="image3" name="image3" class="file-input" ,required="required"/>
                </div>
                <div class="file-upload">
                    <label for="image4">Image4</label>
                    <input type="file" id="image4" name="image4" class="file-input" ,required="required"/>
                </div>
            </div>
            <div class="A-Sub-Card">
                <h3>Upload Video</h3>
                <div class="file-upload">
                    <label for="video">Video</label>
                    <input type="file" id="video" name="video1" class="file-input" ,required="required" />
                </div>
            </div>
        </div>
        <div class="A-Sub-Card">
            <input type="submit" value="Apply" class="A-Submit" />
        </div>
    </div>
        }
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#selectedCategoryId').change(function () {
                var categoryId = $(this).val();
                if (categoryId) {
                    $.ajax({
                        url: '@Url.Action("GetSubCategories", "CustProducts")',
                        type: 'GET',
                        data: { categoryId: categoryId },
                        success: function (data) {
                            var $subCategoryDropdown = $('#selectedProNameId');
                            $subCategoryDropdown.empty();
                            $.each(data, function (index, item) {
                                $subCategoryDropdown.append($('<option>').val(item.Value).text(item.Text));
                            });
                        }
                    });
                } else {
                    $('#selectedProNameId').empty().append('<option value="">Select Subcategory</option>');
                }
            });
        });
    </script>
</body>
</html>

<style>
   body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}
    h1 {
        font-size: 2.5em;
        margin-bottom: 15px;
        color: #007bff; /* Bright blue color */
        text-align: center;
    }
.A-Product-Main {
    max-width: 1200px; /* Maximum width for larger screens */
    margin: 20px auto;
    padding: 5px;
    background-color: #fff;
    /*box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);*/
    border-radius: 5px;
    text-align: center; /* Center text */
}

.A-Product-Card {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping of cards */
    justify-content: space-between; /* Space between cards */
    width: 95%;
    padding: 5px;
    background: #ffffff;
    margin: 10px auto;
    border-radius: 8px;
}

.A-Card1 {
    flex: 1;
    min-width: 300px; /* Minimum width */
    width: 50%;
    margin: 10px;
    padding: 10px;
    text-align: left;
}

.A-Card2 {
    flex: 1;
    min-width: 300px; /* Minimum width */
    width: 50%;
    background: #ffffff;
    margin: 10px;
    padding: 10px;
    text-align: left;
}

.A-Sub-Card {
    margin-bottom: 15px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 8px;
    width: 100%;
    max-width: 800px;
    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.5);
    margin: 10px auto;
}

.A-Sub-Card h4 {
    margin-bottom: 10px;
    font-size: 20px;
    font-weight: bold;
}

.file-upload {
    margin-bottom: 15px; /* Space between file upload elements */
}

.file-upload label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
    color: #555;
}

.file-upload input[type="file"] {
    width: 100%;
    box-sizing: border-box;
    border: 1px solid #ddd;
    padding: 8px;
    border-radius: 4px;
}

.text-area1 {
    width: 100%;
    height: 60px;
    box-sizing: border-box;
}

.A-Submit {
    width: 100%; /* Full width for the submit button */
    padding: 8px;
    border: none;
    border-radius: 3px;
    background: #13aa37;
    font-size: 18px;
    font-weight: bold;
    color: #fff;
    cursor: pointer;
}

.A-Submit:hover {
    background: #0056b3; /* Darker button color on hover */
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5);
}

.control-label {
    font-weight: 200;
    margin-top: 10px;
}

@@media (max-width: 768px) {
    .A-Product-Card {
        flex-direction: column; /* Stack cards vertically on smaller screens */
    }

    .A-Card1, .A-Card2 {
        width: 100%; /* Full width for smaller screens */
        margin: 0; /* Remove margin */
    }

    .A-Submit {
        margin-top: 10px; /* Space above the submit button */
    }
}
</style>