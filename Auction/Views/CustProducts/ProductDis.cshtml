@model IEnumerable<Auction.Models.CustProduct>
@{
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
        }

        .Main-Product {
            width: 90%;
            max-width: 1400px;
            margin: 20px auto;
            padding: 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            font-size: 2.5em;
            margin-bottom: 15px;
            color: #007bff;
            text-align: center;
        }

        .navbar-cat1 {
            padding: 10px;
            background-color: #ffffff;
            border-bottom: 1px solid #ddd;
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-wrap: wrap;
        }

        .search-box {
            display: flex;
            align-items: center;
            width: 100%;
        }

        .search-box input {
            flex: 1;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 4px 0 0 4px;
            outline: none;
        }

        .search-box button {
            padding: 7px 10px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 0 4px 4px 0;
            cursor: pointer;
        }

        .search-box button:hover {
            background-color: #0056b3;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            border: 1px solid #eee;
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #2695ff;
            color: white;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        tr:hover {
            background-color: #f1f8f8;
        }

        .button11 {
            background-color: #4CAF50;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .button11:hover {
            background-color: #45a049;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.7);
            padding-top: 60px;
        }

        .modal-content {
            background-color: #ffffff;
            margin: 5% auto;
            padding: 20px;
            border-radius: 10px;
            width: 80%;
            max-width: 500px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .image-display {
            margin: 5px auto;
            width: 100%;
            height: 200px;
            border: 1px solid #ccc;
            border-radius: 5px;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .image-display img {
            max-width: 100%;
            max-height: 100%;
            object-fit: cover;
        }

        .pagination {
            margin-top: 20px;
            text-align: center;
        }

        .pagination-button {
            margin: 0 5px;
            padding: 5px 10px;
            border: 1px solid #007BFF;
            background: none;
            color: #007BFF;
            cursor: pointer;
        }

        .pagination-button.active {
            background-color: #007BFF;
            color: white;
        }
        input[type="datetime-local"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }
        .button12 {
            background-color: #007BFF; /* Bootstrap primary color */
            border: none;
            padding: 10px;
            color: white;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            font-size: 16px;
        }

        .button12:hover {
            background-color: #0056b3; /* Darker Bootstrap primary color */
        }

        p{
            text-align:center;
        }
        @@media (max-width: 768px) {
            .navbar-cat1 {
                flex-direction: column;
            }

            .search-box {
                width: 100%;
                margin-bottom: 10px;
            }

            .search-box input {
                width: 100%;
            }
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".openModal").click(function () {
                const modal = $(this).closest('tr').find('.modal');
                modal.show();
            });

            $(".close").click(function () {
                $(this).closest('.modal').hide();
            });

            $(window).click(function (event) {
                if ($(event.target).hasClass('modal')) {
                    $(event.target).hide();
                }
            });
        });
    </script>
</head>
<body>
    <div class="Main-Product">
        <h1>Your Auction Product List</h1>
        <p>Here are the products for which the auction has ended! Please set the time if you want to continue the auction.</p>
        <div class="navbar-cat1">
            <!-- Category Dropdown -->
            <form action="@Url.Action("ProductDis")" method="get" id="categoryForm" class="form-inline">
                <div class="form-group">
                    <select name="selectedCategory" id="selectedCategory" class="form-control" onchange="document.getElementById('categoryForm').submit();">
                        <option value="">Select a Category</option>
                        @foreach (var item in ViewBag.category)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
            </form>
            <form action="@Url.Action("ProductDis")" method="get" class="form-inline">
                <div class="search-box">
                    <input type="text" name="searchQuery" class="form-control" placeholder="Search..." value="@Request.QueryString["searchQuery"]">
                    <button type="submit"><i class="fa fa-search"></i></button>
                </div>
            </form>
        </div>

        <div class="table-1">
            <table class="table" id="productTable">
                <thead>
                    <tr>
                        <th></th>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Category</th>
                        <th>Sub Category</th>
                        <th>End Time</th>
                        <th>Actions</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var batData = ViewBag.batdata as IEnumerable<Auction.Models.BatData>; 
                    }

                    @foreach (var item in Model)
                    {
                        if (Convert.ToInt32(Session["UserId"]) == item.U_id && item.End_time < DateTime.Now)
                        {
                            <tr class="table-row">
                                <td>
                                    <a href="@Url.Action("Details", "AdminProducts", new { id = item.Id })">
                                        <img src="@Url.Content("~/ProductImage/" + item.Image1)" height="50px" />
                                    </a>
                                </td>
                                <td>@item.Name</td>
                                <td>$ @item.Price</td>
                                <td>@item.Category.Name</td>
                                <td>@item.ProName.Name</td>
                                <td>@item.End_time.Value.ToLocalTime()</td>
                                <td>
                                    @if (batData != null && batData.All(b => b.ProId != item.Id)) 
                                    {
                                        <button class="openModal button11">Set Time</button>
                                    }
                                    else
                                    {
                                        <label style="font-weight:100">Sell Product</label>
                                    }
                                    <div class="modal">
                                        <div class="modal-content">
                                            <span class="close">&times;</span>
                                            <h2>Add Product</h2>
                                            <div class="image-display">
                                                <img src="@Url.Content("~/ProductImage/" + item.Image1)" />
                                            </div>
                                            @using (Html.BeginForm("SetDate", "CustProducts", FormMethod.Post))
                                            {
                                                <div>
                                                    <label for="StartTime">Start Time:</label>
                                                    <input type="datetime-local" name="startdate"  required />
                                                </div>
                                                <div>
                                                    <label for="EndTime">End Time:</label>
                                                    <input type="datetime-local" name="enddate" required />
                                                </div>
                                                <input type="hidden" value="@item.Id" name="id" />
                                                <input type="submit" class="button12" value="Submit">
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <a href="#" onclick="confirmDelete('@Url.Action("Delete", "CustProducts", new { id = item.Id,title="Delete" })')"><i class="fa fa-trash-o" style="font-size:24px;color:red;" title="Delete Product"></i></a>
                                </td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
            <script>
                function confirmDelete(url) {
                    if (confirm("Are you sure you want to delete this item?")) {
                        window.location.href = url;
                    }
                }
            </script>

            <div class="pagination" id="pagination"></div>
        </div>
    </div>
    <script>
        const rowsPerPage = 10; // Number of rows to display per page
        const tableRows = document.querySelectorAll("#productTable .table-row");
        const totalPages = Math.ceil(tableRows.length / rowsPerPage);
        const paginationContainer = document.getElementById("pagination");

        function displayPage(page) {
            const start = (page - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            tableRows.forEach((row, index) => {
                row.style.display = (index >= start && index < end) ? "" : "none";
            });

            createPaginationButtons(page);
        }

        function createPaginationButtons(currentPage) {
            paginationContainer.innerHTML = "";

            for (let i = 1; i <= totalPages; i++) {
                const button = document.createElement("button");
                button.innerText = i;
                button.classList.add("pagination-button");
                button.onclick = () => displayPage(i);
                if (i === currentPage) button.classList.add("active");

                paginationContainer.appendChild(button);
            }
        }

        displayPage(1);
    </script>
</body>
</html>
