@model IEnumerable<Auction.Models.CustProduct>
@{
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="Main-Product">
        <h1>Your Live Auction Product List</h1>
        <div class="navbar-cat1">
            <!-- Category Dropdown -->
            <div class="dropdown">
                <div class="form-group">
                    <form action="@Url.Action("Index")" method="get" id="categoryForm" class="form-inline">
                        <select name="selectedCategory" id="selectedCategory" class="form-control" onchange="document.getElementById('categoryForm').submit();">
                            <option value="">Select a Category</option>
                            @foreach (var item in ViewBag.category)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </form>
                </div>
            </div>
            <form action="@Url.Action("Index")" method="get" class="form-inline">
                <div class="search-box">
                    <input type="text" name="searchQuery" class="form-control" placeholder="Search..." value="@Request.QueryString["searchQuery"]">
                    <button type="submit" style="border:none;"><i class="fa fa-search"></i></button>
                </div>
            </form>
        </div>

        <div class="table-1">
            <table class="table table-striped" id="productTable">
                <thead>
                    <tr>
                        <th></th>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Category</th>
                        <th>Sub Category</th>
                        <th>End Time</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        if (Convert.ToInt32(Session["UserId"]) == item.U_id && item.End_time > DateTime.Now)
                        {
                            <tr class="table-row">
                                <td>
                                    <a href="@Url.Action("Details", "AdminProducts", new { id = item.Id })">
                                        <img src="@Url.Content("~/ProductImage/" + item.Image1)" height="50px" />
                                    </a>
                                </td>
                                <td>@item.Name</td>
                                <td>₹ @item.Price</td>
                                <td>@item.Category.Name</td>
                                <td>@item.ProName.Name</td>
                                <td>@item.End_time.Value.ToLocalTime()</td>
                                <td><a href="#" onclick="confirmDelete('@Url.Action("Delete", "CustProducts", new { id = item.Id })')"><i class="fa fa-trash-o" style="font-size:24px;color:red;" title="Delete Product"></i></a></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <script>
                function confirmDelete(url) {
                    if (confirm("Are you sure you want to delete this item?")) {
                        window.location.href = url;
                    }
                }
            </script>
            <div class="pagination" id="pagination"></div>
        </div>
    </div>

    <script>
        const rowsPerPage = 10; // Number of rows to display per page
        const tableRows = document.querySelectorAll("#productTable .table-row");
        const totalPages = Math.ceil(tableRows.length / rowsPerPage);
        const paginationContainer = document.getElementById("pagination");

        function displayPage(page) {
            const start = (page - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            tableRows.forEach((row, index) => {
                row.style.display = (index >= start && index < end) ? "" : "none";
            });

            createPaginationButtons(page);
        }

        function createPaginationButtons(currentPage) {
            paginationContainer.innerHTML = "";

            for (let i = 1; i <= totalPages; i++) {
                const button = document.createElement("button");
                button.innerText = i;
                button.classList.add("pagination-button");
                button.onclick = () => displayPage(i);
                if (i === currentPage) button.classList.add("active");

                paginationContainer.appendChild(button);
            }
        }

        displayPage(1);
    </script>
</body>
</html>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
    }

    .Main-Product {
        width: 90%;
        max-width: 1400px;
        padding: 20px;
        margin: 20px auto;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    h1 {
        font-size: 2.5em;
        margin-bottom: 15px;
        color: #007bff; /* Bright blue color */
        text-align: center;
    }

    .navbar-cat1 {
        padding: 5px;
        color: #333;
        background-color: #ffffff;
        border-bottom: 1px solid #ddd;
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 20px;
        border-radius: 5px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
    }

    .search-box {
        display: flex;
        align-items: center;
    }

        .search-box input {
            flex: 1;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 4px 0 0 4px;
            outline: none;
        }

        .search-box button {
            padding: 7px 10px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 0 4px 4px 0;
            cursor: pointer;
        }

    .search-box button:hover {
        background-color: #0056b3;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    th, td {
        border: 1px solid #e2e5e4;
        padding: 12px;
        text-align: left;
        font-size: 16px;
    }

    th {
        background-color: #2695ff;
        color: white;
    }

    tr:nth-child(even) {
        background-color: #f6fafae3;
    }

    tr:hover {
        background-color: #f1f8f8;
    }

    .pagination {
        margin-top: 20px;
        text-align: center;
    }

    .pagination-button {
        margin: 0 5px;
        padding: 8px 12px;
        border: 1px solid #007BFF;
        background: none;
        color: #007BFF;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s;
    }

    .pagination-button:hover {
        background-color: #007BFF;
        color: white;
    }

    .pagination-button.active {
        background-color: #007BFF;
        color: white;
    }

    @@media (max-width: 768px) {
        .Main-Product {
            width: 95%;
        }

        h1 {
            font-size: 2em;
        }

        th, td {
            font-size: 14px;
        }

        .search-box input {
            font-size: 14px;
        }

        .search-box button {
            padding: 8px;
            font-size: 14px;
        }
    }
</style>
